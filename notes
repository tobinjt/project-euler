
Problem 71:
The result must be between 2/5 and 3/7, so I can probably figure out bounds for
n.  Iterate over d, saving any n/d in the right range, and sort the results.
Or, iterate over d and save the best value as I go.
Hmm, another time I wrote:
    Bounds are 3/8 to 3/7

TODO: could I start from the top instead?

upper_bound := 3/7  // this will never change
answer := 2/5
for denominator := 6; denominator <= 1000000; denominator++ {
  for numerator := answer.Num(), current := numerator/denominator;
      upper_bound.Cmp(current) == 1;
      numerator++, current = numerator/denominator {
    if gcd(numerator, denominator) == 1 {
      answer = current ???
    }
  }
}
